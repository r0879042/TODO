{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-overview\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-message\"\n};\nconst _hoisted_3 = {\n  class: \"todo-card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"My Todo List\", -1 /* HOISTED */)), $data.todos.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[0] || (_cache[0] = [_createElementVNode(\"p\", null, \"No tasks yet! Add a task to get started.\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, todo => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: todo.id,\n      class: \"todo-item\"\n    }, [_createVNode(_component_router_link, {\n      to: '/todo/' + todo.id,\n      class: \"todo-link\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString(todo.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(todo.text), 1 /* TEXT */), _createElementVNode(\"span\", {\n        class: _normalizeClass({\n          'done': todo.status\n        })\n      }, \"Status: \" + _toDisplayString(todo.status ? 'Done' : 'Pending'), 3 /* TEXT, CLASS */)])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_router_link, {\n    to: \"/create\"\n  }, {\n    default: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"button\", {\n      class: \"add-button\"\n    }, \"Add Todo\", -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","todos","length","_hoisted_2","_cache","_createCommentVNode","_Fragment","_renderList","todo","id","_createVNode","_component_router_link","to","default","_withCtx","_hoisted_3","_toDisplayString","title","text","_normalizeClass","status","_"],"sources":["/Users/sonia/Desktop/TODO/todo-app/src/views/TodoOverview.vue"],"sourcesContent":["<template>\n  <div class=\"todo-overview\">\n    <h1>My Todo List</h1>\n    <div v-if=\"todos.length === 0\" class=\"empty-message\">\n      <p>No tasks yet! Add a task to get started.</p>\n    </div>\n    <div v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\n      <router-link :to=\"'/todo/' + todo.id\" class=\"todo-link\">\n        <div class=\"todo-card\">\n          <h2>{{ todo.title }}</h2>\n          <p>{{ todo.text }}</p>\n          <span :class=\"{'done': todo.status}\">Status: {{ todo.status ? 'Done' : 'Pending' }}</span>\n        </div>\n      </router-link>\n    </div>\n    <router-link to=\"/create\">\n      <button class=\"add-button\">Add Todo</button>\n    </router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      todos: JSON.parse(localStorage.getItem(\"todos\")) || [], // Fetch todos from localStorage\n    };\n  },\n};\n</script>\n\n<style scoped>\n.todo-overview {\n  width: 100%;\n  max-width: 500px;\n  margin-top: 50px;\n}\n\nh1 {\n  color: #ff6f61;\n  margin-bottom: 20px;\n}\n\n.todo-item {\n  margin: 15px 0;\n}\n\n.todo-link {\n  text-decoration: none;\n}\n\n.todo-card {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.todo-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n}\n\n.done {\n  color: #4caf50; /* Green for done tasks */\n}\n\n.add-button {\n  padding: 10px 20px;\n  background-color: #ff6f61;\n  color: white;\n  border: none;\n  border-radius: 30px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 20px;\n}\n\n.add-button:hover {\n  background-color: #ff3b2f;\n}\n\n.empty-message p {\n  font-size: 1.2em;\n  color: #ff6f61;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAGmCD,KAAK,EAAC;;;EAK5BA,KAAK,EAAC;AAAW;;;uBAP5BE,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJC,mBAAA,CAAqB,YAAjB,cAAY,sBACLC,KAAA,CAAAC,KAAK,CAACC,MAAM,U,cAAvBL,mBAAA,CAEM,OAFNM,UAEM,EAAAC,MAAA,QAAAA,MAAA,OADJL,mBAAA,CAA+C,WAA5C,0CAAwC,oB,MAJjDM,mBAAA,iB,kBAMIR,mBAAA,CAQMS,SAAA,QAdVC,WAAA,CAMwBP,KAAA,CAAAC,KAAK,EAAbO,IAAI;yBAAhBX,mBAAA,CAQM;MARsBD,GAAG,EAAEY,IAAI,CAACC,EAAE;MAAEd,KAAK,EAAC;QAC9Ce,YAAA,CAMcC,sBAAA;MANAC,EAAE,aAAaJ,IAAI,CAACC,EAAE;MAAEd,KAAK,EAAC;;MAPlDkB,OAAA,EAAAC,QAAA,CAQQ,MAIM,CAJNf,mBAAA,CAIM,OAJNgB,UAIM,GAHJhB,mBAAA,CAAyB,YAAAiB,gBAAA,CAAlBR,IAAI,CAACS,KAAK,kBACjBlB,mBAAA,CAAsB,WAAAiB,gBAAA,CAAhBR,IAAI,CAACU,IAAI,kBACfnB,mBAAA,CAA0F;QAAnFJ,KAAK,EAXtBwB,eAAA;UAAA,QAWiCX,IAAI,CAACY;QAAM;SAAG,UAAQ,GAAAJ,gBAAA,CAAGR,IAAI,CAACY,MAAM,6C;MAXrEC,CAAA;;kCAeIX,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAS;IAf7BC,OAAA,EAAAC,QAAA,CAgBM,MAA4CV,MAAA,QAAAA,MAAA,OAA5CL,mBAAA,CAA4C;MAApCJ,KAAK,EAAC;IAAY,GAAC,UAAQ,oB;IAhBzC0B,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}