{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      statusFilter: 'all',\n      // Filter for status (done vs open)\n      timeFilter: 'all',\n      // Filter for time (on-time vs past-time)\n      todos: JSON.parse(localStorage.getItem(\"todos\")) || [] // Fetch todos from localStorage\n    };\n  },\n  computed: {\n    // Filter todos based on status and time\n    filteredTodos() {\n      let filtered = this.todos;\n\n      // Filter by status\n      if (this.statusFilter !== 'all') {\n        filtered = filtered.filter(todo => this.statusFilter === 'done' ? todo.status : !todo.status);\n      }\n\n      // Filter by time\n      if (this.timeFilter === 'onTime') {\n        filtered = filtered.filter(todo => new Date(todo.time) >= new Date());\n      } else if (this.timeFilter === 'pastTime') {\n        filtered = filtered.filter(todo => new Date(todo.time) < new Date());\n      }\n      return filtered;\n    }\n  },\n  methods: {\n    // Toggle the status of a todo\n    toggleStatus(todo) {\n      todo.status = !todo.status;\n      this.saveTodos();\n    },\n    // Save todos back to localStorage\n    saveTodos() {\n      localStorage.setItem(\"todos\", JSON.stringify(this.todos));\n    }\n  }\n};","map":{"version":3,"names":["data","statusFilter","timeFilter","todos","JSON","parse","localStorage","getItem","computed","filteredTodos","filtered","filter","todo","status","Date","time","methods","toggleStatus","saveTodos","setItem","stringify"],"sources":["/Users/sonia/Desktop/TODO/todo-app/src/views/TodoOverview.vue"],"sourcesContent":["<template>\n  <div class=\"todo-overview\">\n    <h1>My Todo List</h1>\n\n    <!-- Filter Section -->\n    <div class=\"filters\">\n      <div>\n        <label for=\"status\">Filter by Status:</label>\n        <select v-model=\"statusFilter\" id=\"status\">\n          <option value=\"all\">All</option>\n          <option value=\"done\">Done</option>\n          <option value=\"open\">Open</option>\n        </select>\n      </div>\n      <div>\n        <label for=\"time\">Filter by Time:</label>\n        <select v-model=\"timeFilter\" id=\"time\">\n          <option value=\"all\">All</option>\n          <option value=\"onTime\">On Time</option>\n          <option value=\"pastTime\">Past Time</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Empty Message -->\n    <div v-if=\"filteredTodos.length === 0\" class=\"empty-message\">\n      <p>No tasks match the filter criteria.</p>\n    </div>\n\n    <!-- Todo Items -->\n    <div v-for=\"todo in filteredTodos\" :key=\"todo.id\" class=\"todo-item\">\n      <div class=\"todo-card\">\n        <h2>{{ todo.title }}</h2>\n        <p>{{ todo.text }}</p>\n        <p>Due: {{ todo.time }}</p>\n        <span :class=\"{'done': todo.status}\">Status: {{ todo.status ? 'Done' : 'Open' }}</span>\n        <button @click=\"toggleStatus(todo)\" class=\"status-button\">\n          Mark as {{ todo.status ? 'Open' : 'Done' }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Add Todo Button -->\n    <router-link to=\"/create\">\n      <button class=\"add-button\">Add Todo</button>\n    </router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      statusFilter: 'all', // Filter for status (done vs open)\n      timeFilter: 'all', // Filter for time (on-time vs past-time)\n      todos: JSON.parse(localStorage.getItem(\"todos\")) || [], // Fetch todos from localStorage\n    };\n  },\n  computed: {\n    // Filter todos based on status and time\n    filteredTodos() {\n      let filtered = this.todos;\n\n      // Filter by status\n      if (this.statusFilter !== 'all') {\n        filtered = filtered.filter(todo => (this.statusFilter === 'done' ? todo.status : !todo.status));\n      }\n\n      // Filter by time\n      if (this.timeFilter === 'onTime') {\n        filtered = filtered.filter(todo => new Date(todo.time) >= new Date());\n      } else if (this.timeFilter === 'pastTime') {\n        filtered = filtered.filter(todo => new Date(todo.time) < new Date());\n      }\n\n      return filtered;\n    },\n  },\n  methods: {\n    // Toggle the status of a todo\n    toggleStatus(todo) {\n      todo.status = !todo.status;\n      this.saveTodos();\n    },\n    // Save todos back to localStorage\n    saveTodos() {\n      localStorage.setItem(\"todos\", JSON.stringify(this.todos));\n    },\n  },\n};\n</script>\n\n<style scoped>\n.todo-overview {\n  width: 100%;\n  max-width: 500px;\n  margin-top: 50px;\n}\n\nh1 {\n  color: #ff6f61;\n  margin-bottom: 20px;\n}\n\n.filters {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.filters div {\n  display: flex;\n  flex-direction: column;\n}\n\nlabel {\n  margin-bottom: 5px;\n  font-size: 1.1em;\n  color: #333;\n}\n\nselect {\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n}\n\n.todo-item {\n  margin: 15px 0;\n}\n\n.todo-card {\n  background-color: #fff;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.todo-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);\n}\n\n.done {\n  color: #4caf50;\n}\n\n.add-button {\n  padding: 10px 20px;\n  background-color: #ff6f61;\n  color: white;\n  border: none;\n  border-radius: 30px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 20px;\n}\n\n.add-button:hover {\n  background-color: #ff3b2f;\n}\n\n.empty-message p {\n  font-size: 1.2em;\n  color: #ff6f61;\n}\n\n.status-button {\n  padding: 10px 20px;\n  background-color: #ff6f61;\n  color: white;\n  border: none;\n  border-radius: 30px;\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.status-button:hover {\n  background-color: #ff3b2f;\n}\n</style>\n"],"mappings":";;AAkDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MAAE;MACrBC,UAAU,EAAE,KAAK;MAAE;MACnBC,KAAK,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAE;IAC1D,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,aAAaA,CAAA,EAAG;MACd,IAAIC,QAAO,GAAI,IAAI,CAACP,KAAK;;MAEzB;MACA,IAAI,IAAI,CAACF,YAAW,KAAM,KAAK,EAAE;QAC/BS,QAAO,GAAIA,QAAQ,CAACC,MAAM,CAACC,IAAG,IAAM,IAAI,CAACX,YAAW,KAAM,MAAK,GAAIW,IAAI,CAACC,MAAK,GAAI,CAACD,IAAI,CAACC,MAAO,CAAC;MACjG;;MAEA;MACA,IAAI,IAAI,CAACX,UAAS,KAAM,QAAQ,EAAE;QAChCQ,QAAO,GAAIA,QAAQ,CAACC,MAAM,CAACC,IAAG,IAAK,IAAIE,IAAI,CAACF,IAAI,CAACG,IAAI,KAAK,IAAID,IAAI,CAAC,CAAC,CAAC;MACvE,OAAO,IAAI,IAAI,CAACZ,UAAS,KAAM,UAAU,EAAE;QACzCQ,QAAO,GAAIA,QAAQ,CAACC,MAAM,CAACC,IAAG,IAAK,IAAIE,IAAI,CAACF,IAAI,CAACG,IAAI,IAAI,IAAID,IAAI,CAAC,CAAC,CAAC;MACtE;MAEA,OAAOJ,QAAQ;IACjB;EACF,CAAC;EACDM,OAAO,EAAE;IACP;IACAC,YAAYA,CAACL,IAAI,EAAE;MACjBA,IAAI,CAACC,MAAK,GAAI,CAACD,IAAI,CAACC,MAAM;MAC1B,IAAI,CAACK,SAAS,CAAC,CAAC;IAClB,CAAC;IACD;IACAA,SAASA,CAAA,EAAG;MACVZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACgB,SAAS,CAAC,IAAI,CAACjB,KAAK,CAAC,CAAC;IAC3D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}